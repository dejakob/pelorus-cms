angular.module("district01.services.auth",[]),angular.module("district01.services.auth").factory("Authentication",["$http","configuration","$window","$log","userFactory","$rootScope",function(e,o,t,n,i,r){var a={},u={twitter:"/auth/twitter"};return a.currentUser={},a.authenticated=!1,a.identify=function(){n.log("Identification in progress"),i.getProfile(function(e){a.currentUser=e,a.authenticated=!0,r.$emit("Authentication.authenticated")},function(e){a.authenticated=!1,r.$emit("Authentication.authenticationFailed")})},a.goToOauth=function(){t.open(o.serverPath+u[o.oAuth.provider],"_self")},a.logOut=function(e){i.logout(function(o){a.currentUser={},a.authenticated=!1,r.$emit("Authentication.authenticationEnded"),e&&e()},function(e){})},a}]),angular.module("pelorus.filters",[]),angular.module("pelorus.directives",[]),angular.module("pelorus.factories",[]),angular.module("pelorus.services",["pelorus.factories"]),angular.module("pelorus.controllers",["pelorus.services"]),angular.module("pelorus",["ui.router","ngResource","ngNotify","ncy-angular-breadcrumb","district01.services.auth","pelorus.filters","pelorus.directives","pelorus.controllers","pelorus.services"]).run(["$rootScope","$log","configuration","RouteAuthenticationService","Authentication",function(e,o,t,n,i){i.identify(),e.$on("$stateChangeStart",function(e,o,i,r,a){return t.loaded?void n.authorizeUserForRoute(e,o,i,r,a):(e.preventDefault(),void console.warn("The configuration could not be loaded. Make sure a valid config file is present. (public/app/config/config.js)"))}),o.info("Pelorus cms is booting")}]),angular.module("pelorus").config([function(){}]),angular.element(document).ready(function(){console.info("Welcome to Pelorus CMS (v0.0.1)"),console.info("Loading configuration..."),$.get("app/config/config.json",function(e){console.info("Loaded configuration succesfully!"),console.info("Verifying setup..."),angular.module("pelorus").config(["configurationProvider",function(o){o.setConfiguration(e)}]),angular.bootstrap(document,["pelorus"])}).fail(function(e){console.warn("Unable to load the configuration. Please make sure a proper config file is present (public/app/config/config.js)")})}),angular.module("pelorus").config(["$urlRouterProvider","$stateProvider","$locationProvider","$urlMatcherFactoryProvider",function(e,o,t,n){e.otherwise("/"),t.html5Mode(!0),o.state("home",{url:"/",access:{requiresLogin:!0,permissionCheckType:0},ncyBreadcrumb:{label:"Home"},views:{"":{templateUrl:"app/components/home/home.html",controller:"HomeController"}}}).state("authentication",{url:"/authentication",data:{},resolve:{},views:{"":{templateUrl:"app/modules/auth/views/authentication-view.html",controller:"AuthenticationController"}}}).state("loggedin",{url:"/auth/callback-success",access:{requiresLogin:!0},controller:["Authentication","$log","$rootScope","$state",function(e,o,t,n){e.authenticated?o.log("Authentication succeeded, should move on to home screen now"):(t.$on("Authentication.authenticated",function(){n.go("home")}),t.$on("Authentication.authenticationFailed",function(){n.go("authentication")}))}]})}]),angular.module("pelorus.factories").factory("userFactory",["$resource","configuration",function(e,o){var t=o.serverPath+"/api/"+o.apiLevel,n={};return n=e(t+"/user/:listController:id:objController/:docController",{id:"@id",listController:"@listController",docController:"@docController",objController:"@objController"},{getProfile:{method:"GET",params:{objController:"profile"}},logout:{method:"GET",params:{objController:"logout"}}})}]),angular.module("pelorus.controllers").controller("appController",["$scope","$rootScope","$log","NotificationService","Authentication",function(e,o,t,n,i){e.Authentication=i}]),angular.module("pelorus.factories").factory("requestInterceptor",["$q","$rootScope",function(e,o){return{responseError:function(o){switch(o.status){case 0:break;case 401:break;case 404:}return e.reject(o)}}}]),angular.module("pelorus").provider("configuration",[function(){var e={loaded:!1,serverPath:null,clientAuthentication:null,language:"en-EN",oAuth:{}};this.setConfiguration=function(o){var t=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;t.test(o.clientAuthentication)?(angular.extend(e,o),e.loaded=!0,console.info("Setup ok!")):console.warn("Invalid client key. Make sure a valid client key is supplied in the configuration-file (public/app/config/config.js)")},this.$get=function(){return e}}]),angular.module("pelorus.services").service("NotificationService",["ngNotify","$rootScope",function(e,o){var t={};return o.$on("Authentication.authenticated",function(){}),t}]),angular.module("pelorus.services").service("RouteAuthenticationService",["$log","Authentication","$state","$rootScope",function(e,o,t,n){var i={};return i.authorizeUserForRoute=function(e,i,r,a,u){void 0!==i.access&&(o.authenticated||(n.$on("Authentication.authenticated",function(){}),n.$on("Authentication.authenticationFailed",function(){e.preventDefault(),t.go("authentication")})))},i}]),angular.module("pelorus.controllers").controller("HomeController",["$scope",function(e){}]),angular.module("pelorus.directives").directive("header",["Authentication","$state",function(e,o){return{templateUrl:"app/core/header/header.html",replace:!0,restrict:"AE",link:function(t,n,i){t.Authentication=e,t.logout=function(){e.logOut(function(){o.go("authentication")})}}}}]),angular.module("pelorus.directives").directive("navigation",[function(){return{templateUrl:"app/core/navigation/navigation.html",replace:!0,restrict:"AE",link:function(e,o,t){}}}]),angular.module("pelorus.controllers").controller("AuthenticationController",["$scope","Authentication","$state","$rootScope",function(e,o,t,n){e.handleLogin=function(){o.goToOauth()};var i=function(){o.authenticated?t.go("home"):n.$on("Authentication.authenticated",function(){t.go("home")})};i()}]);