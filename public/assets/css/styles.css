body,h1,h2,h3,h4,h5,h6,p,blockquote,pre,dl,dd,ol,ul,form,fieldset,legend,figure,table,th,td,caption,hr{margin:0;padding:0}abbr[title],dfn[title]{cursor:help}u,ins{text-decoration:none}ins{border-bottom:1px solid}:root{-ms-overflow-style:-ms-autohiding-scrollbar;overflow-y:scroll;-webkit-text-size-adjust:100%}audio:not([controls]){display:none}button{overflow:visible}details{display:block}input[type="number"]{width:auto}input[type="search"]{-webkit-appearance:textfield}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}main{display:block}summary{display:block}pre{overflow:auto}progress{display:inline-block}small{font-size:75%}template{display:none}textarea{overflow:auto}[hidden]{display:none}*,::before,::after{box-sizing:inherit}*{background-color:inherit;font-size:inherit;line-height:inherit}::before,::after{text-decoration:inherit;vertical-align:inherit}*,::before,::after{border-style:solid;border-width:0}*{margin:0;padding:0}:root{box-sizing:border-box;cursor:default;font:100%/1.5 sans-serif;text-rendering:optimizeLegibility}html{background-color:#fff;color:#000}a{text-decoration:none}audio,canvas,iframe,img,svg,video{vertical-align:middle}button,input,select,textarea{background-color:transparent}button,input,select,textarea{color:inherit;font-family:inherit;font-style:inherit;font-weight:inherit}button,[type="button"],[type="date"],[type="datetime"],[type="datetime-local"],[type="email"],[type="month"],[type="number"],[type="password"],[type="reset"],[type="search"],[type="submit"],[type="tel"],[type="text"],[type="time"],[type="url"],[type="week"],select,textarea{min-height:1.5em}code,kbd,pre,samp{font-family:monospace,monospace}nav ol,nav ul{list-style:none}select{-moz-appearance:none;-webkit-appearance:none}select::-ms-expand{display:none}select::-ms-value{color:currentColor}table{border-collapse:collapse;border-spacing:0}textarea{resize:vertical}::-moz-selection{background-color:#B3D4FC;text-shadow:none}::selection{background-color:#B3D4FC;text-shadow:none}[aria-busy="true"]{cursor:progress}[aria-controls]{cursor:pointer}[aria-disabled]{cursor:default}[hidden][aria-hidden="false"]{clip:rect(0 0 0 0);display:inherit;position:absolute}[hidden][aria-hidden="false"]:focus{clip:auto}[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak{display:none !important}*[ng-click],*[data-ng-click],*[ui-sref]{cursor:pointer}html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}html{font:400 66.66667% "Roboto",sans-serif;-webkit-overflow-scrolling:touch;background-color:#e6e6e6}@media (min-width: 71.25em){html{font-size:112.5%}}body{-webkit-font-smoothing:antialiased;color:#4d4d4d}::-moz-selection{background-color:#4d4d4d;color:#e6e6e6;text-shadow:none}::selection{background-color:#4d4d4d;color:#e6e6e6;text-shadow:none}fieldset{border:0}legend,label[for]{display:block;width:100%;cursor:pointer}label.required::after{content:"*";margin-left:5px;color:red}textarea{height:auto;resize:none}::-webkit-input-placeholder{font-family:"Roboto",serif;font-style:italic}::-moz-placeholder{font-family:"Roboto",serif;font-style:italic}:-ms-input-placeholder{font-family:"Roboto",serif;font-style:italic}button::-moz-focus-inner,input[type="button"]::-moz-focus-inner,input[type="submit"]::-moz-focus-inner{border:0;padding:0}input:disabled,textarea:disabled{opacity:0.6}input::focus{outline:0}h1,h2,h3,h4,h5,h6{font-family:"Roboto",sans-serif;font-weight:400;margin-bottom:1rem}h1{font-size:2.3125rem;line-height:1.2973em}h2{font-size:1.75rem;line-height:1.28571em}h3{font-size:1.3125rem;line-height:1.42857em}h4,h5,h6{font-weight:700;font-size:1rem;line-height:1.5em}p{font-size:12px;color:#616566}a{text-decoration:none;color:#23A788;transition:color 250ms ease-in-out;vertical-align:bottom}a:visited{color:#23A788}a:hover{text-decoration:underline;color:#52e0bf}a:focus{outline:thin dotted;color:#52e0bf}a:hover,a:active{outline:0}@-webkit-keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@-webkit-keyframes fadeUp{from{opacity:0;-webkit-transform:translateY(50px);transform:translateY(50px)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes fadeUp{from{opacity:0;-webkit-transform:translateY(50px);transform:translateY(50px)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes fadeUpBig{from{opacity:0;-webkit-transform:translateY(100%);transform:translateY(100%)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes fadeUpBig{from{opacity:0;-webkit-transform:translateY(100%);transform:translateY(100%)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes fadeRight{from{opacity:0;-webkit-transform:translate3d(100%, inherit, inherit);transform:translate3d(100%, inherit, inherit)}to{opacity:1;-webkit-transform:translate3d(0, inherit, inherit);transform:translate3d(0, inherit, inherit)}}@keyframes fadeRight{from{opacity:0;-webkit-transform:translate3d(100%, inherit, inherit);transform:translate3d(100%, inherit, inherit)}to{opacity:1;-webkit-transform:translate3d(0, inherit, inherit);transform:translate3d(0, inherit, inherit)}}.u-text-uppercase{text-transform:uppercase}.u-text-lowercase{text-transform:lowercase}.u-text-thin{font-weight:100}.u-text-light{font-weight:300}.u-text-normal{font-weight:400}.u-text-medium{font-weight:500}.u-text-bold{font-weight:700}.u-text-ultra-bold{font-weight:900}.u-text-left{text-align:left}.u-text-center{text-align:center}.u-text-right{text-align:right}.is-hidden{display:none !important}.u-z-alpha{z-index:1}.u-z-beta{z-index:2}.u-z-gamma{z-index:3}.u-z-delta{z-index:4}.u-z-epsilon{z-index:5}.u-relative{position:relative}.u-width-1-6{width:16.66667%;padding-left:1.51515%;padding-right:1.51515%}.u-width-2-6{width:33.33333%;padding-left:1.51515%;padding-right:1.51515%}.u-width-3-6{width:50%;padding-left:1.51515%;padding-right:1.51515%}.u-width-4-6{width:66.66667%;padding-left:1.51515%;padding-right:1.51515%}.u-width-5-6{width:83.33333%;padding-left:1.51515%;padding-right:1.51515%}.u-width-6-6{width:100%;padding-left:1.51515%;padding-right:1.51515%}.u-overflowHidden{overflow:hidden}.clr{*zoom:1}.clr:before,.clr:after{display:table;content:''}.clr:after{clear:both}.u-clear{*zoom:1}.u-clear:before,.u-clear:after{display:table;content:''}.u-clear:after{clear:both}.fl{float:left}.u-floatLeft{float:left}.fr{float:right}.u-floatRight{float:right}.fn{float:none}.viewConditions,.viewOptions{margin-top:40px}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyaWMvX2dlbmVyaWMucmVzZXQuc2NzcyIsImdlbmVyaWMvX2dlbmVyaWMuc2FuaXRpemUuc2NzcyIsImdlbmVyaWMvX2dlbmVyaWMuYW5ndWxhci5zY3NzIiwiZ2VuZXJpYy9fZ2VuZXJpYy5ib3gtc2l6aW5nLnNjc3MiLCJiYXNlL19iYXNlLnBhZ2Uuc2NzcyIsInNldHRpbmdzL19zZXR0aW5ncy5jb2xvcnMuc2NzcyIsInNldHRpbmdzL19zZXR0aW5ncy5tcy5zY3NzIiwiYmFzZS9fYmFzZS5mb3Jtcy5zY3NzIiwiYmFzZS9fYmFzZS50eXBvZ3JhcGh5LnNjc3MiLCJ0b29scy9fdG9vbHMuc3BhY2luZy5zY3NzIiwic2V0dGluZ3MvX3NldHRpbmdzLnR5cG9ncmFwaHkuc2NzcyIsInRvb2xzL190b29scy50eXBvZ3JhcGh5LnNjc3MiLCJ1dGlsaXRpZXMvX3V0aWxpdGllcy5hbmltYXRpb25zLnNjc3MiLCJ1dGlsaXRpZXMvX3V0aWxpdGllcy50eXBvZ3JhcGh5LnNjc3MiLCJ1dGlsaXRpZXMvX3V0aWxpdGllcy5zdGF0ZXMuc2NzcyIsInV0aWxpdGllcy9fdXRpbGl0aWVzLmxheWVycy5zY3NzIiwidXRpbGl0aWVzL191dGlsaXRpZXMucG9zaXRpb24uc2NzcyIsInV0aWxpdGllcy9fdXRpbGl0aWVzLndpZHRocy5zY3NzIiwiLi4vLi4vYXBwL2Jvd2VyX2NvbXBvbmVudHMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fZ3V0dGVycy5zY3NzIiwidXRpbGl0aWVzL191dGlsaXRpZXMuZmxvYXQuc2NzcyIsInRvb2xzL190b29scy5taXhpbnMuc2NzcyIsInV0aWxpdGllcy9fdXRpbGl0aWVzLnNoYW1lLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsdUdBdUJJLFNBQ0EsU0FBVyxDQUNkLHVCQU9HLFdBQWEsQ0FDaEIsTUFPRyxvQkFBc0IsQ0FDekIsSUFNRyx1QkFBeUIsQ0FDNUIsTUN4QkEsNENBQ0Esa0JBQ0EsNkJBQStCLENBQy9CLHNCQUdBLFlBQWMsQ0FDZCxPQUdBLGdCQUFrQixDQUNsQixRQUdBLGFBQWUsQ0FDZixxQkFJQyxVQUFZLENBRmQscUJBTUUsNEJBQThCLENBTmhDLG1HQVVHLHVCQUF5QixDQUN6QixLQUtGLGFBQWUsQ0FDZixRQUdBLGFBQWUsQ0FDZixJQUdBLGFBQWUsQ0FDZixTQUdBLG9CQUFzQixDQUN0QixNQUdBLGFBN0RvQixDQThEcEIsU0FHQSxZQUFjLENBQ2QsU0FHQSxhQUFlLENBQ2YsU0FHQSxZQUFjLENBQ2QsbUJBU0Esa0JBQW9CLENBQ3BCLEVBR0EseUJBQ0Esa0JBQ0EsbUJBQXFCLENBQ3JCLGlCQUlBLHdCQUNBLHNCQUF3QixDQUN4QixtQkFhQSxtQkFDQSxjQUFnQixDQUNoQixFQUtBLFNBQ0EsU0FBVyxDQUNYLE1BS0Esc0JBQ0EsZUFDQSx5QkFDQSxpQ0ExSXVDLENBMkl2QyxLQUtBLHNCQUNBLFVBOUltQixDQStJbkIsRUFLQSxvQkFuSjRCLENBb0o1QixrQ0FVQSxxQkEzSm9DLENBNEpwQyw2QkFRQSw0QkF0SzBDLENBdUsxQyw2QkFRQSxjQUNBLG9CQUNBLG1CQUNBLG1CQUFxQixDQUNyQixrUkF1QkEsZ0JBek0rRSxDQTBNL0Usa0JBUUEsK0JBQThDLENBQzlDLGNBTUEsZUF0Tm9CLENBdU5wQixPQUtBLHFCQUNBLHVCQUF5QixDQUYxQixtQkFLRSxZQUFjLENBTGhCLGtCQVNFLGtCQUFvQixDQUNwQixNQU1ELHlCQUNBLGdCQXZPdUIsQ0F3T3ZCLFNBS0EsZUE1T3lCLENBNk96QixpQkFLQSx5QkFDQSxnQkF2UDJCLENBaVAzQixBQU9BLFlBRkEseUJBQ0EsZ0JBdlAyQixDQXdQM0IsbUJBS0EsZUFBaUIsQ0FDakIsZ0JBS0EsY0FBZ0IsQ0FDaEIsZ0JBS0EsY0FBZ0IsQ0FDaEIsOEJBS0EsbUJBQ0EsZ0JBQ0EsaUJBQW1CLENBS25CLG9DQUZDLFNBQVcsQ0FDWCwwRUM5UkEsdUJBQXlCLENBQzFCLHdDQVFHLGNBQWdCLENBQ25CLEtDWkcscUJBQXVCLENBQzFCLG1CQU1PLGtCQUFvQixDQUN2QixLQ1pELHVDQUNBLGlDQUNBLHdCQzhDNkIsQ0R6Q2hDLDRCQVJELEtBTVEsZ0JFQXdCLENGRS9CLENBRUQsS0FDSSxtQ0FDQSxhQ3VDNkIsQ0R0Q2hDLGlCQUdHLHlCQUNBLGNBQ0EsZ0JBQWtCLENBQ3JCLFlBR0cseUJBQ0EsY0FDQSxnQkFBa0IsQ0FDckIsU0d4QkcsUUFBVSxDQUViLGtCQUlHLGNBQ0EsV0FDQSxjQUFnQixDQUVuQixzQkFLVyxZQUNBLGdCQUNBLFNBQVcsQ0FFZCxTQVVMLFlBQ0EsV0FBYSxDQUNoQiw0QkFLRywyQkFDQSxpQkFBbUIsQ0FDdEIsbUJBR0csMkJBQ0EsaUJBQW1CLENBQ3RCLHVCQUdHLDJCQUNBLGlCQUFtQixDQUN0Qix1R0FPRyxTQUNBLFNBQVcsQ0FDZCxpQ0FLRyxXQUFhLENBQ2hCLGFBR0csU0FBVyxDQUNkLGtCQzlERyxnQ0FDQSxnQkNzREEsa0JDbkQyQixDRkQ5QixHR0FHLG9CQUNBLG9CQUFhLENIR2hCLEdHSkcsa0JBQ0EscUJBQWEsQ0hPaEIsR0dSRyxvQkFDQSxxQkFBYSxDSFdoQixTQUtHLGdCR2pCQSxlQUNBLGlCQUFhLENIa0JoQixFQUdHLGVBQ0EsYUFBZSxDQUNsQixFQUtHLHFCQUNBLGNBQ0EsbUNBQ0EscUJBQXVCLENBSjNCLFVBT1EsYUhONkIsQ0dEckMsUUFXUSwwQkFDQSxhSE15QixDR2xCakMsUUFnQlEsb0JBQ0EsYUhDeUIsQ0dsQmpDLGlCQXNCUSxTQUFXLENBQ2QsMEJJM0RELEtBQ0ksU0FBVyxDQUVmLEdBQ0ksU0FBVyxDQUFBLENKdURkLEFJbkRMLGtCQVJJLEtBQ0ksU0FBVyxDQUVmLEdBQ0ksU0FBVyxDQUFBLENBSW5CLDBCQUNJLEtBQ0ksVUFDQSxtQ0FBQSxBQUFxQiwwQkFBQSxDQUd6QixHQUNJLFVBQ0EsZ0NBQUEsQUFBcUIsdUJBQUEsQ0FBQSxDQVI3QixBQVlBLGtCQVhJLEtBQ0ksVUFDQSxtQ0FBQSxBQUFxQiwwQkFBQSxDQUd6QixHQUNJLFVBQ0EsZ0NBQUEsQUFBcUIsdUJBQUEsQ0FBQSxDQUk3Qiw2QkFDSSxLQUNJLFVBQ0EsbUNBQUEsQUFBcUIsMEJBQUEsQ0FHekIsR0FDSSxVQUNBLGdDQUFBLEFBQXFCLHVCQUFBLENBQUEsQ0FSN0IsQUFZQSxxQkFYSSxLQUNJLFVBQ0EsbUNBQUEsQUFBcUIsMEJBQUEsQ0FHekIsR0FDSSxVQUNBLGdDQUFBLEFBQXFCLHVCQUFBLENBQUEsQ0FJN0IsNkJBQ0ksS0FDSSxVQUNBLHNEQUFBLEFBQXNCLDZDQUFBLENBRzFCLEdBQ0ksVUFDQSxtREFBQSxBQUFzQiwwQ0FBQSxDQUFBLENBUjlCLEFDakNBLHFCRGtDSSxLQUNJLFVBQ0Esc0RBQUEsQUFBc0IsNkNBQUEsQ0FHMUIsR0FDSSxVQUNBLG1EQUFBLEFBQXNCLDBDQUFBLENBQUEsQ0N6QzlCLGtCQUNJLHdCQUEwQixDQUM3QixrQkFHRyx3QkFBMEIsQ0FDN0IsYUFJRyxlQUFpQixDQUNwQixjQUVHLGVBQWlCLENBQ3BCLGVBRUcsZUFBaUIsQ0FDcEIsZUFFRyxlQUFpQixDQUNwQixhQUVHLGVBQWlCLENBQ3BCLG1CQUVHLGVBQWlCLENBQ3BCLGFBSUcsZUFBaUIsQ0FDcEIsZUFFRyxpQkFBbUIsQ0FDdEIsY0FFRyxnQkFBa0IsQ0FDckIsV0NwQ0csdUJBQXlCLENBQzVCLFdDSGMsU0FBVyxDQUFJLFVBQ2YsU0FBVyxDQUFJLFdBQ2YsU0FBVyxDQUFJLFdBQ2YsU0FBVyxDQUFJLGFBQ2YsU0FBVyxDQUFJLFlDSDFCLGlCQUFtQixDQUN0QixhQ0FHLGdCQUNBLHNCQUNBLHNCQ3NFd0IsQ0RyRTNCLGFBRUcsZ0JBQ0Esc0JBQ0Esc0JDaUV3QixDRGhFM0IsYUFFRyxVQUNBLHNCQUNBLHNCQzREd0IsQ0QzRDNCLGFBRUcsZ0JBQ0Esc0JBQ0Esc0JDdUR3QixDRHREM0IsYUFFRyxnQkFDQSxzQkFDQSxzQkNrRHdCLENEakQzQixhQUVHLFdBQ0Esc0JBQ0Esc0JDNkN3QixDRDVDM0Isa0JFN0JHLGVBQWlCLENBQ3BCLE1DaUNHLE1BQVMsQ0QvQmIsdUJDbUNRLGNBQ0EsVUFBWSxDQUNmLFdBR0csVUFBWSxDQUNmLFVBVkQsTUFBUyxDRDVCYiwrQkNnQ1EsY0FDQSxVQUFZLENBQ2YsZUFHRyxVQUFZLENBQ2YsSURqQ0QsVUFBWSxDQUNmLGFBRUcsVUFBWSxDQUNmLElBRUcsV0FBYSxDQUNoQixjQUVHLFdBQWEsQ0FDaEIsSUFFRyxVQUFZLENBQ2YsNkJFdEJHLGVBQWlCLENBQ3BCIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICAgIEdlbmVyaWM6IFJlc2V0XG4gICAgLS0tXG4gICAgX2dlbmVyaWMucmVzZXQuc2NzcyBpcyB1c2VkIGZyb20gSW51aXQuY3NzIEZyYW1ld29ya1xuICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9pbnVpdGNzcy9nZW5lcmljLnJlc2V0L2Jsb2IvbWFzdGVyL19nZW5lcmljLnJlc2V0LnNjc3NcbiovXG5cbi8qKlxuICogQXMgd2VsbCBhcyB1c2luZyBub3JtYWxpemUuY3NzLCBpdCBpcyBvZnRlbiBhZHZhbnRhZ2VvdXMgdG8gcmVtb3ZlIGFsbFxuICogbWFyZ2lucyBmcm9tIGNlcnRhaW4gZWxlbWVudHMuXG4gKi9cbmJvZHksXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmRsLFxuZGQsXG5vbCxcbnVsLFxuZm9ybSxcbmZpZWxkc2V0LFxubGVnZW5kLFxuZmlndXJlLFxudGFibGUsXG50aCxcbnRkLFxuY2FwdGlvbixcbmhyIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBHaXZlIGEgaGVscCBjdXJzb3IgdG8gZWxlbWVudHMgdGhhdCBnaXZlIGV4dHJhIGluZm8gb24gYDpob3ZlcmAuXG4gKi9cbmFiYnJbdGl0bGVdLFxuZGZuW3RpdGxlXSB7XG4gICAgY3Vyc29yOiBoZWxwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB1bmRlcmxpbmVzIGZyb20gcG90ZW50aWFsbHkgdHJvdWJsZXNvbWUgZWxlbWVudHMuXG4gKi9cbnUsXG5pbnMge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLyoqXG4gKiBBcHBseSBmYXV4IHVuZGVybGluZXMgdG8gaW5zZXJ0ZWQgdGV4dCB2aWEgYGJvcmRlci1ib3R0b21gLlxuICovXG5pbnMge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZDtcbn1cbiIsIi8qXG4gICAgR2VuZXJpYzogU2FuaXRpemVcbiAgICAtLS1cbiAgICBMaWNlbnNlOiBzYW5pdGl6ZS5jc3MgfCBDQzAgUHVibGljIERvbWFpbiB8IGdpdGh1Yi5jb20vam9uYXRoYW50bmVhbC9zYW5pdGl6ZS5jc3NcbiovXG5cbiRyb290LWJveC1zaXppbmc6IGJvcmRlci1ib3ggIWRlZmF1bHQ7XG4kcm9vdC1jdXJzb3I6IGRlZmF1bHQgIWRlZmF1bHQ7XG4kcm9vdC1mb250LWZhbWlseTogc2Fucy1zZXJpZiAhZGVmYXVsdDtcbiRyb290LWZvbnQtc2l6ZTogMTAwJSAhZGVmYXVsdDtcbiRyb290LWxpbmUtaGVpZ2h0OiAxLjUgIWRlZmF1bHQ7XG4kcm9vdC10ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5ICFkZWZhdWx0O1xuXG4kaHRtbC1iYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGICFkZWZhdWx0O1xuJGh0bWwtY29sb3I6ICMwMDAwMDAgIWRlZmF1bHQ7XG4kYW5jaG9yLXRleHQtZGVjb3JhdGlvbjogbm9uZSAhZGVmYXVsdDtcbiRmb3JtLWVsZW1lbnQtYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XG4kZm9ybS1lbGVtZW50LW1pbi1oZWlnaHQ6IGlmKHVuaXRsZXNzKCRyb290LWxpbmUtaGVpZ2h0KSwgI3skcm9vdC1saW5lLWhlaWdodH1lbSwgaWYodW5pdCgkcm9vdC1saW5lLWhlaWdodCkgIT0gJyUnLCAkcm9vdC1saW5lLWhlaWdodCwgbnVsbCkpICFkZWZhdWx0O1xuJG1lZGlhLWVsZW1lbnQtdmVydGljYWwtYWxpZ246IG1pZGRsZSAhZGVmYXVsdDtcbiRtb25vc3BhY2UtZm9udC1mYW1pbHk6IG1vbm9zcGFjZSAhZGVmYXVsdDtcbiRuYXYtbGlzdC1zdHlsZTogbm9uZSAhZGVmYXVsdDtcbiRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjogI0IzRDRGQyAhZGVmYXVsdDtcbiRzZWxlY3Rpb24tdGV4dC1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XG4kc21hbGwtZm9udC1zaXplOiA3NSUgIWRlZmF1bHQ7XG4kdGFibGUtYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZSAhZGVmYXVsdDtcbiR0YWJsZS1ib3JkZXItc3BhY2luZzogMCAhZGVmYXVsdDtcbiR0ZXh0YXJlYS1yZXNpemU6IHZlcnRpY2FsICFkZWZhdWx0O1xuXG5cblxuLypcbiAqIE5vcm1hbGl6YXRpb25cbiAqL1xuXG46cm9vdCB7XG5cdC1tcy1vdmVyZmxvdy1zdHlsZTogLW1zLWF1dG9oaWRpbmctc2Nyb2xsYmFyOyAvLyBFZGdlIDEyKywgSW50ZXJuZXQgRXhwbG9yZXIgMTEtXG5cdG92ZXJmbG93LXk6IHNjcm9sbDsgLy8gQWxsIGJyb3dzZXJzIHdpdGhvdXQgb3ZlcmxheWluZyBzY3JvbGxiYXJzXG5cdC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gaU9TIDgrXG59XG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG5cdGRpc3BsYXk6IG5vbmU7IC8vIENocm9tZSA0NC0sIGlPUyA4KywgU2FmYXJpIDkrXG59XG5cbmJ1dHRvbiB7XG5cdG92ZXJmbG93OiB2aXNpYmxlOyAvLyBJbnRlcm5ldCBFeHBsb3JlciAxMS1cbn1cblxuZGV0YWlscyB7XG5cdGRpc3BsYXk6IGJsb2NrOyAvLyBFZGdlIDEyKywgRmlyZWZveCA0MCssIEludGVybmV0IEV4cGxvcmVyIDExLSwgV2luZG93cyBQaG9uZSA4LjErXG59XG5cbmlucHV0IHtcblx0Jlt0eXBlPVwibnVtYmVyXCJdIHtcblx0XHR3aWR0aDogYXV0bzsgLy8gRmlyZWZveCAzNitcblx0fVxuXG5cdCZbdHlwZT1cInNlYXJjaFwiXSB7XG5cdFx0LXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8vIENocm9tZSA0NSssIFNhZmFyaSA5K1xuXG5cdFx0Jjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblx0XHQmOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcblx0XHRcdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgLy8gQ2hyb21lIDQ1KywgU2FmYXJpIDkrXG5cdFx0fVxuXHR9XG59XG5cbm1haW4ge1xuXHRkaXNwbGF5OiBibG9jazsgLy8gQW5kcm9pZCA0LjMtLCBJbnRlcm5ldCBFeHBsb3JlciAxMS0sIFdpbmRvd3MgUGhvbmUgOC4xK1xufVxuXG5zdW1tYXJ5IHtcblx0ZGlzcGxheTogYmxvY2s7IC8vIEZpcmVmb3ggNDArLCBJbnRlcm5ldCBFeHBsb3JlciAxMS0sIFdpbmRvd3MgUGhvbmUgOC4xK1xufVxuXG5wcmUge1xuXHRvdmVyZmxvdzogYXV0bzsgLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTEtXG59XG5cbnByb2dyZXNzIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrOyAvLyBJbnRlcm5ldCBFeHBsb3JlciAxMS0sIFdpbmRvd3MgUGhvbmUgOC4xK1xufVxuXG5zbWFsbCB7XG5cdGZvbnQtc2l6ZTogJHNtYWxsLWZvbnQtc2l6ZTsgLy8gQWxsIGJyb3dzZXJzXG59XG5cbnRlbXBsYXRlIHtcblx0ZGlzcGxheTogbm9uZTsgLy8gQW5kcm9pZCA0LjMtLCBJbnRlcm5ldCBFeHBsb3JlciAxMS0sIGlPUyA3LSwgU2FmYXJpIDctLCBXaW5kb3dzIFBob25lIDguMStcbn1cblxudGV4dGFyZWEge1xuXHRvdmVyZmxvdzogYXV0bzsgLy8gRWRnZSAxMissIEludGVybmV0IEV4cGxvcmVyIDExLVxufVxuXG5baGlkZGVuXSB7XG5cdGRpc3BsYXk6IG5vbmU7IC8vIEludGVybmV0IEV4cGxvcmVyIDEwLVxufVxuXG4vKlxuICogVW5pdmVyc2FsIGluaGVyaXRhbmNlXG4gKi9cblxuKixcbjo6YmVmb3JlLFxuOjphZnRlciB7XG5cdGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbioge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuXHRmb250LXNpemU6IGluaGVyaXQ7XG5cdGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuXHR0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XG5cdHZlcnRpY2FsLWFsaWduOiBpbmhlcml0O1xufVxuXG5cblxuLypcbiAqIE9waW5pb25hdGVkIGRlZmF1bHRzXG4gKi9cblxuLy8gc3BlY2lmeSB0aGUgYm9yZGVyIHN0eWxlIGFuZCB3aWR0aCBvZiBhbGwgZWxlbWVudHNcblxuKixcbjo6YmVmb3JlLFxuOjphZnRlciB7XG5cdGJvcmRlci1zdHlsZTogc29saWQ7XG5cdGJvcmRlci13aWR0aDogMDtcbn1cblxuLy8gcmVtb3ZlIHRoZSBtYXJnaW4gYW5kIHBhZGRpbmcgb2YgYWxsIGVsZW1lbnRzXG5cbioge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG59XG5cbi8vIHNwZWNpZnkgdGhlIHJvb3Qgc3R5bGVzIG9mIHRoZSBkb2N1bWVudFxuXG46cm9vdCB7XG5cdGJveC1zaXppbmc6ICRyb290LWJveC1zaXppbmc7XG5cdGN1cnNvcjogJHJvb3QtY3Vyc29yO1xuXHRmb250OiAjeyRyb290LWZvbnQtc2l6ZX0vI3skcm9vdC1saW5lLWhlaWdodH0gJHJvb3QtZm9udC1mYW1pbHk7XG5cdHRleHQtcmVuZGVyaW5nOiAkcm9vdC10ZXh0LXJlbmRlcmluZztcbn1cblxuLy8gc3BlY2lmeSB0aGUgYmFja2dyb3VuZCBjb2xvciBvZiBodG1sXG5cbmh0bWwge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkaHRtbC1iYWNrZ3JvdW5kLWNvbG9yO1xuXHRjb2xvcjogJGh0bWwtY29sb3I7XG59XG5cbi8vIHNwZWNpZnkgdGhlIHRleHQgZGVjb3JhdGlvbiBvZiBhbmNob3JzXG5cbmEge1xuXHR0ZXh0LWRlY29yYXRpb246ICRhbmNob3ItdGV4dC1kZWNvcmF0aW9uO1xufVxuXG4vLyBzcGVjaWZ5IHRoZSBhbGlnbm1lbnQgb2YgbWVkaWEgZWxlbWVudHNcblxuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyB7XG5cdHZlcnRpY2FsLWFsaWduOiAkbWVkaWEtZWxlbWVudC12ZXJ0aWNhbC1hbGlnbjtcbn1cblxuLy8gc3BlY2lmeSB0aGUgYmFja2dyb3VuZCBjb2xvciBvZiBmb3JtIGVsZW1lbnRzXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkZm9ybS1lbGVtZW50LWJhY2tncm91bmQtY29sb3I7XG59XG5cbi8vIHNwZWNpZnkgdGhlIGluaGVyaXRlZCBjb2xvciBhbmQgZm9udCBvZiBmb3JtIGVsZW1lbnRzXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuXHRjb2xvcjogaW5oZXJpdDtcblx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cdGZvbnQtc3R5bGU6IGluaGVyaXQ7XG5cdGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vLyBzcGVjaWZ5IHRoZSBtaW5pbXVtIGhlaWdodCBvZiBmb3JtIGVsZW1lbnRzXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJkYXRlXCJdLFxuW3R5cGU9XCJkYXRldGltZVwiXSxcblt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sXG5bdHlwZT1cImVtYWlsXCJdLFxuW3R5cGU9XCJtb250aFwiXSxcblt0eXBlPVwibnVtYmVyXCJdLFxuW3R5cGU9XCJwYXNzd29yZFwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInNlYXJjaFwiXSxcblt0eXBlPVwic3VibWl0XCJdLFxuW3R5cGU9XCJ0ZWxcIl0sXG5bdHlwZT1cInRleHRcIl0sXG5bdHlwZT1cInRpbWVcIl0sXG5bdHlwZT1cInVybFwiXSxcblt0eXBlPVwid2Vla1wiXSxcbnNlbGVjdCxcbnRleHRhcmVhIHtcblx0bWluLWhlaWdodDogJGZvcm0tZWxlbWVudC1taW4taGVpZ2h0O1xufVxuXG4vLyBzcGVjaWZ5IHRoZSBmb250IGZhbWlseSBvZiBjb2RlIGVsZW1lbnRzXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcblx0Zm9udC1mYW1pbHk6ICRtb25vc3BhY2UtZm9udC1mYW1pbHksIG1vbm9zcGFjZTtcbn1cblxuLy8gc3BlY2lmeSB0aGUgbGlzdCBzdHlsZSBvZiBuYXYgbGlzdHNcblxubmF2IG9sLFxubmF2IHVsIHtcblx0bGlzdC1zdHlsZTogJG5hdi1saXN0LXN0eWxlO1xufVxuXG4vLyBzcGVjaWZ5IHRoZSBzdGFuZGFyZCBhcHBlYXJhbmNlIG9mIHNlbGVjdHNcblxuc2VsZWN0IHtcblx0LW1vei1hcHBlYXJhbmNlOiBub25lOyAgICAvLyBGaXJlZm94IDQwK1xuXHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IC8vIENocm9tZSA0NStcblxuXHQmOjotbXMtZXhwYW5kIHtcblx0XHRkaXNwbGF5OiBub25lOyAgICAgICAgLy8gRWRnZSAxMissIEludGVybmV0IEV4cGxvcmVyIDExLVxuXHR9XG5cblx0Jjo6LW1zLXZhbHVlIHtcblx0XHRjb2xvcjogY3VycmVudENvbG9yOyAgLy8gRWRnZSAxMissIEludGVybmV0IEV4cGxvcmVyIDExLVxuXHR9XG59XG5cbi8vIHNwZWNpZnkgdGhlIGJvcmRlciBzdHlsaW5nIG9mIHRhYmxlc1xuXG50YWJsZSB7XG5cdGJvcmRlci1jb2xsYXBzZTogJHRhYmxlLWJvcmRlci1jb2xsYXBzZTtcblx0Ym9yZGVyLXNwYWNpbmc6ICR0YWJsZS1ib3JkZXItc3BhY2luZztcbn1cblxuLy8gc3BlY2lmeSB0aGUgcmVzaXphYmlsaXR5IG9mIHRleHRhcmVhc1xuXG50ZXh0YXJlYSB7XG5cdHJlc2l6ZTogJHRleHRhcmVhLXJlc2l6ZTtcbn1cblxuLy8gc3BlY2lmeSB0aGUgYmFja2dyb3VuZCBjb2xvciBhbmQgZHJvcCBzaGFkb3cgb2YgdGV4dCBzZWxlY3Rpb25zXG5cbjo6c2VsZWN0aW9uIHtcblx0YmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOyAvLyByZXF1aXJlZCB3aGVuIGRlY2xhcmluZyA6OnNlbGVjdGlvblxuXHR0ZXh0LXNoYWRvdzogJHNlbGVjdGlvbi10ZXh0LXNoYWRvdztcbn1cblxuLy8gc3BlY2lmeSB0aGUgcHJvZ3Jlc3MgY3Vyc29yIG9mIHVwZGF0aW5nIGVsZW1lbnRzXG5cblthcmlhLWJ1c3k9XCJ0cnVlXCJdIHtcblx0Y3Vyc29yOiBwcm9ncmVzcztcbn1cblxuLy8gc3BlY2lmeSB0aGUgcG9pbnRlciBjdXJzb3Igb2YgdHJpZ2dlciBlbGVtZW50c1xuXG5bYXJpYS1jb250cm9sc10ge1xuXHRjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8vIHNwZWNpZnkgdGhlIHVuc3R5bGVkIGN1cnNvciBvZiBkaXNhYmxlZCwgbm90LWVkaXRhYmxlLCBvciBvdGhlcndpc2UgaW5vcGVyYWJsZSBlbGVtZW50c1xuXG5bYXJpYS1kaXNhYmxlZF0ge1xuXHRjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8vIHNwZWNpZnkgdGhlIHN0eWxlIG9mIHZpc3VhbGx5IGhpZGRlbiB5ZXQgYWNjZXNzaWJsZSBlbGVtZW50c1xuXG5baGlkZGVuXVthcmlhLWhpZGRlbj1cImZhbHNlXCJdIHtcblx0Y2xpcDogcmVjdCgwIDAgMCAwKTtcblx0ZGlzcGxheTogaW5oZXJpdDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXG5cdCY6Zm9jdXMge1xuXHRcdGNsaXA6IGF1dG87XG5cdH1cbn1cbiIsIi8qXG4gICAgR2VuZXJpYzogQW5ndWxhckpTXG4gICAgLS0tXG4gICAgQW5ndWxhckpTIHN0eWxlcyB0aGF0IGRyYW1hdGljYWxseSBpbXByb3ZlIHVzYWJpbGl0eVxuKi9cblxuXG5bbmdcXDpjbG9ha10sXG5bbmctY2xvYWtdLFxuW2RhdGEtbmctY2xvYWtdLFxuW3gtbmctY2xvYWtdLFxuLm5nLWNsb2FrLFxuLngtbmctY2xvYWsge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi8qXG4gICAgTWFrZSBlbGVtZW50cyB0aGF0IGFyZSBjbGlja2FibGUgdmlzdWFsbHkgXCJwb2ludGVkXCJcbiovXG4qW25nLWNsaWNrXSxcbipbZGF0YS1uZy1jbGlja10sXG4qW3VpLXNyZWZdIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iLCIvKlxuICAgIEdlbmVyaWM6IEJveCBzaXppbmdcbiAgICAtLS1cbiAgICBUYWtlbiBmcm9tIFtJbnVpdCBDU1NdKGh0dHBzOi8vZ2l0aHViLmNvbS9pbnVpdGNzcy9nZW5lcmljLmJveC1zaXppbmcpXG4gICAgLS0tXG4gICAgU2V0IHRoZSBnbG9iYWwgYGJveC1zaXppbmdgIHN0YXRlIHRvIGBib3JkZXItYm94YC5cbiAgICBjc3MtdHJpY2tzLmNvbS9pbmhlcml0aW5nLWJveC1zaXppbmctcHJvYmFibHktc2xpZ2h0bHktYmV0dGVyLWJlc3QtcHJhY3RpY2VcbiAgICBwYXVsaXJpc2guY29tLzIwMTIvYm94LXNpemluZy1ib3JkZXItYm94LWZ0d1xuKi9cblxuaHRtbCB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKiB7XG4gICAgJixcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgICB9XG59XG4iLCIvKlxuICAgIEJhc2U6IFBhZ2VcbiAgICAtLS1cbiAgICBEZWZhdWx0IG1hcmt1cCBmb3IgcGFnZSBsZXZlbCBlbGVtZW50c1xuKi9cblxuaHRtbCB7XG4gICAgZm9udDogJGFscGhhLWZvbnQtd2VpZ2h0ICRhbHBoYS1mb250LXNpemUvMTYqMTAwJS8jeyRhbHBoYS1saW5lLWhlaWdodH0gJGFscGhhLWZvbnQtZmFtaWx5O1xuICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGNvbG9yLW5ldXRyYWwsbGlnaHQpO1xuXG4gICAgQGluY2x1ZGUgbXEoJGJwNSkge1xuICAgICAgICBmb250LXNpemU6ICRhbHBoYS1mb250LXNpemUvMTYqMTEyLjUlO1xuICAgIH1cbn1cblxuYm9keSB7XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgY29sb3I6IHBhbGV0dGUoY29sb3ItbmV1dHJhbCxkYXJrKTtcbn1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShjb2xvci1uZXV0cmFsLGRhcmspO1xuICAgIGNvbG9yOiBwYWxldHRlKGNvbG9yLW5ldXRyYWwsbGlnaHQpO1xuICAgIHRleHQtc2hhZG93OiBub25lO1xufVxuXG46OnNlbGVjdGlvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShjb2xvci1uZXV0cmFsLGRhcmspO1xuICAgIGNvbG9yOiBwYWxldHRlKGNvbG9yLW5ldXRyYWwsbGlnaHQpO1xuICAgIHRleHQtc2hhZG93OiBub25lO1xufVxuIiwiLy9cbi8vICBTZXR0aW5nczogQ29sb3JzXG4vLyAgLS0tXG4vLyAgVGhlIHBhbGV0dGUgZnVuY3Rpb24gd29ya3Mgd2l0aCBhIGJhc2UgY29sb3IgYW5kIGEgdGludC5cbi8vXG5cbi8vIFBhbGV0dGUgZnVuY3Rpb24gPiBlZy4gcGFsZXR0ZShjb2xvci1hbHBoYSxiYXNlKVxuQGZ1bmN0aW9uIHBhbGV0dGUoJHBhbGV0dGUsICR0b25lOiAnYmFzZScpIHtcbiAgICBAcmV0dXJuIG1hcC1nZXQobWFwLWdldCgkcGFsZXR0ZXMsICRwYWxldHRlKSwgJHRvbmUpO1xufVxuXG5cbi8vIERlZmF1bHRcbiR3aGl0ZTogcmdiKDI1NSwgMjU1LCAyNTUpO1xuXG5cbi8vIFByaW1hcnlcbiRibHVlTGlnaHQ6ICM1MTUwNzA7XG4kYmx1ZTogIzJDMzY0NztcbiRibHVlRGFyazogIzFGMjkzOTtcblxuJG9yYW5nZTogI0VGOUM0MTtcblxuJHJlZDogcmdiKDIyMywgMzcsIDY4KTtcbiRibGFjazogIzJDMzQ0MDtcblxuJGdyZWVuOiAjMjNBNzg4O1xuXG5cbi8vIEludGVyZmFjZSBDb2xvcnNcbiRncmF5OiAjMUIyMzIzO1xuJGdyYXlEYXJrOiAjMTYxQzFEO1xuXG5cbi8vIFNlY29uZGFyeVxuJGdyYXlMaWdodDogcmdiKDIzNSwgMjM2LCAyMzkpO1xuXG5cbiRwcmltYXJ5OiAkZ3JlZW47XG5cblxuLy8gQmFzZSBjb2xvcnNcbiRjb2xvci1uZXV0cmFsICAgICAgICAgICAgICA6ICNhYWEgIWRlZmF1bHQ7XG5cbiRjb2xvci1hbHBoYSAgICAgICAgICAgICAgICA6ICMyM0E3ODggIWRlZmF1bHQ7XG4kY29sb3ItYmV0YSAgICAgICAgICAgICAgICAgOiAjMDA3NEQ5ICFkZWZhdWx0O1xuXG4kY29sb3ItZXJyb3IgICAgICAgICAgICAgICAgOiAjRkY0MTM2ICFkZWZhdWx0O1xuJGNvbG9yLXN1Y2Nlc3MgICAgICAgICAgICAgIDogIzJFQ0M0MCAhZGVmYXVsdDtcbiRjb2xvci1ub3RpY2UgICAgICAgICAgICAgICA6ICNGRjg1MUIgIWRlZmF1bHQ7XG5cbi8vIFBhbGV0dGVzXG4kcGFsZXR0ZXM6IChcbiAgICBjb2xvci1uZXV0cmFsOiAoXG4gICAgICAgIHgtbGlnaHQgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1uZXV0cmFsKSwwLDEwMCksXG4gICAgICAgIGxpZ2h0ICAgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1uZXV0cmFsKSwwLDkwKSxcbiAgICAgICAgYmFzZSAgICAgICAgICAgICAgICA6ICRjb2xvci1uZXV0cmFsLFxuICAgICAgICBkYXJrICAgICAgICAgICAgICAgIDogaHNsKGh1ZSgkY29sb3ItbmV1dHJhbCksMCwzMCksXG4gICAgICAgIHgtZGFyayAgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1uZXV0cmFsKSwwLDEwKVxuICAgICksXG4gICAgY29sb3ItYWxwaGE6IChcbiAgICAgICAgbGlnaHQgICAgICAgICAgICAgICA6IGhzbChodWUoJGNvbG9yLWFscGhhKSw3MCw2MCksXG4gICAgICAgIGJhc2UgICAgICAgICAgICAgICAgOiAkY29sb3ItYWxwaGEsXG4gICAgICAgIGRhcmsgICAgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1hbHBoYSksMTAwLDI1KSxcbiAgICAgICAgeC1kYXJrICAgICAgICAgICAgICA6IGhzbChodWUoJGNvbG9yLWFscGhhKSwxMDAsMTUpXG4gICAgKSxcbiAgICBjb2xvci1iZXRhOiAoXG4gICAgICAgIGxpZ2h0ICAgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1iZXRhKSw3MCw2MCksXG4gICAgICAgIGJhc2UgICAgICAgICAgICAgICAgOiAkY29sb3ItYmV0YSxcbiAgICAgICAgZGFyayAgICAgICAgICAgICAgICA6IGhzbChodWUoJGNvbG9yLWJldGEpLDEwMCwyNSksXG4gICAgICAgIHgtZGFyayAgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1iZXRhKSwxMDAsMTUpXG4gICAgKSxcbiAgICBjb2xvci1lcnJvcjogKFxuICAgICAgICBsaWdodCAgICAgICAgICAgICAgIDogaHNsKGh1ZSgkY29sb3ItZXJyb3IpLDcwLDYwKSxcbiAgICAgICAgYmFzZSAgICAgICAgICAgICAgICA6ICRjb2xvci1lcnJvcixcbiAgICAgICAgZGFyayAgICAgICAgICAgICAgICA6IGhzbChodWUoJGNvbG9yLWVycm9yKSwxMDAsMzUpLFxuICAgICksXG4gICAgY29sb3Itc3VjY2VzczogKFxuICAgICAgICBsaWdodCAgICAgICAgICAgICAgIDogaHNsKGh1ZSgkY29sb3Itc3VjY2VzcyksNzAsNjApLFxuICAgICAgICBiYXNlICAgICAgICAgICAgICAgIDogJGNvbG9yLXN1Y2Nlc3MsXG4gICAgICAgIGRhcmsgICAgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1zdWNjZXNzKSwxMDAsMzUpLFxuICAgICksXG4gICAgY29sb3Itbm90aWNlOiAoXG4gICAgICAgIGxpZ2h0ICAgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1ub3RpY2UpLDcwLDYwKSxcbiAgICAgICAgYmFzZSAgICAgICAgICAgICAgICA6ICRjb2xvci1ub3RpY2UsXG4gICAgICAgIGRhcmsgICAgICAgICAgICAgICAgOiBoc2woaHVlKCRjb2xvci1ub3RpY2UpLDEwMCwzNSksXG4gICAgKVxuKTtcbiIsIi8vXG4vLyAgU2V0dGluZ3M6IE1vZHVsYXIgc2NhbGVcbi8vICAtLS1cbi8vICBTZXQgeW91ciBtb2R1bGFyIHNjYWxlIHNldHRpbmcgYW5kIGRlZmluZSBhIGZpeGVkIG1vZHVsYXIgc2NhbGVcbi8vXG5cbi8vIG1hbnVhbCBtb2R1bGFyIHNjYWxlIGZvbnQgc2l6ZXNcbi8vIGJhc2VkIG9uIGh0dHA6Ly9tb2R1bGFyc2NhbGUuY29tL3NjYWxlLz9weDE9MTYmcHgyPTE4JnJhMT0xLjMzMyZyYTI9MFxuXG4kbXMtMyAgICAgICAgICAgICAgICAgICAgICAgOiAxMSAhZGVmYXVsdDtcbiRtcy0yICAgICAgICAgICAgICAgICAgICAgICA6IDEyICFkZWZhdWx0O1xuJG1zLTEgICAgICAgICAgICAgICAgICAgICAgIDogMTQgIWRlZmF1bHQ7XG4kbXMwICAgICAgICAgICAgICAgICAgICAgICAgOiAxNiAhZGVmYXVsdDtcbiRtczEgICAgICAgICAgICAgICAgICAgICAgICA6IDE4ICFkZWZhdWx0O1xuJG1zMiAgICAgICAgICAgICAgICAgICAgICAgIDogMjEgIWRlZmF1bHQ7XG4kbXMzICAgICAgICAgICAgICAgICAgICAgICAgOiAyMyAhZGVmYXVsdDtcbiRtczQgICAgICAgICAgICAgICAgICAgICAgICA6IDI4ICFkZWZhdWx0O1xuJG1zNSAgICAgICAgICAgICAgICAgICAgICAgIDogMzEgIWRlZmF1bHQ7XG4kbXM2ICAgICAgICAgICAgICAgICAgICAgICAgOiAzNyAhZGVmYXVsdDtcbiRtczcgICAgICAgICAgICAgICAgICAgICAgICA6IDQyICFkZWZhdWx0O1xuJG1zOCAgICAgICAgICAgICAgICAgICAgICAgIDogNTAgIWRlZmF1bHQ7XG4kbXMxMCAgICAgICAgICAgICAgICAgICAgICAgOiA1NiAhZGVmYXVsdDtcbiRtczExICAgICAgICAgICAgICAgICAgICAgICA6IDY3ICFkZWZhdWx0O1xuJG1zMTIgICAgICAgICAgICAgICAgICAgICAgIDogNzUgIWRlZmF1bHQ7XG4kbXMxMyAgICAgICAgICAgICAgICAgICAgICAgOiA4OSAhZGVmYXVsdDtcbiRtczE0ICAgICAgICAgICAgICAgICAgICAgICA6IDEwMCAhZGVmYXVsdDtcbiIsIi8qXG4gICAgQmFzZTogRm9ybXNcbiAgICAtLS1cbiAgICBEZWZhdWx0IG1hcmt1cCBmb3IgdGhlIGZvcm0gZWxlbWVudHNcbiovXG5cbmZpZWxkc2V0IHtcbiAgICBib3JkZXI6IDA7XG4gICAgLy9AaW5jbHVkZSBtYXJnaW4tYm90dG9tKDEpO1xufVxuXG5sZWdlbmQsXG5sYWJlbFtmb3JdIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgLy9AaW5jbHVkZSB0ZXh0LWRpbWVuc2lvbnMoJGFscGhhLWZvbnQtc2l6ZSwxLDAsMCwuMjUpO1xufVxuXG5sYWJlbCB7XG4gICAgJi5yZXF1aXJlZCB7XG4gICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiKlwiO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICAgICAgICAgIGNvbG9yOiByZWQ7XG5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuaW5wdXQge1xuXG59XG5cblxudGV4dGFyZWEge1xuICAgIGhlaWdodDogYXV0bztcbiAgICByZXNpemU6IG5vbmU7XG59XG5cbi8vIFBsYWNlaG9sZGVyc1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGZvbnQtZmFtaWx5OiAkYmV0YS1mb250LWZhbWlseTtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbjo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6ICRiZXRhLWZvbnQtZmFtaWx5O1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgZm9udC1mYW1pbHk6ICRiZXRhLWZvbnQtZmFtaWx5O1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLy8gRmlyZWZveCBpbm5lciBib3JkZXIgZml4XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0W3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgICBib3JkZXI6IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLy8gSW5wdXQgZmllbGQgZGlzYWJsZWQgc3RhdGVcbmlucHV0OmRpc2FibGVkLFxudGV4dGFyZWE6ZGlzYWJsZWQge1xuICAgIG9wYWNpdHk6IDAuNjtcbn1cblxuaW5wdXQ6OmZvY3VzIHtcbiAgICBvdXRsaW5lOiAwO1xufVxuIiwiLypcbiAgICBFbGVtZW50czogVHlwb2dyYXBoeVxuICAgIC0tLVxuICAgIERlZmF1bHQgbWFya3VwIGZvciB0eXBvZ3JhcGhpYyBlbGVtZW50c1xuKi9cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgICBmb250LWZhbWlseTogJGFscGhhLWZvbnQtZmFtaWx5O1xuICAgIGZvbnQtd2VpZ2h0OiAkYWxwaGEtZm9udC13ZWlnaHQ7XG4gICAgQGluY2x1ZGUgbWFyZ2luLWJvdHRvbSgkYWxwaGEtbGVhZGluZyk7XG59XG5cbmgxIHtcbiAgICBAaW5jbHVkZSB0ZXh0LWRpbWVuc2lvbnMoJG1zNiwyKTtcbn1cblxuaDIge1xuICAgIEBpbmNsdWRlIHRleHQtZGltZW5zaW9ucygkbXM0LDEuNSk7XG59XG5cbmgzIHtcbiAgICBAaW5jbHVkZSB0ZXh0LWRpbWVuc2lvbnMoJG1zMiwxLjI1KTtcbn1cblxuaDQsXG5oNSxcbmg2IHtcbiAgICBmb250LXdlaWdodDogJGJldGEtZm9udC13ZWlnaHQ7XG4gICAgQGluY2x1ZGUgdGV4dC1kaW1lbnNpb25zKCRhbHBoYS1mb250LXNpemUsMSk7XG59XG5cbnAge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjb2xvcjogIzYxNjU2Njtcbn1cblxuLy8gTGlua3NcblxuYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiBwYWxldHRlKGNvbG9yLWFscGhhKTtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAkYW5pbWF0aW9uLWR1cmF0aW9uICRhbmltYXRpb24tZWFzaW5nO1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG5cbiAgICAmOnZpc2l0ZWQge1xuICAgICAgICBjb2xvcjogcGFsZXR0ZShjb2xvci1hbHBoYSk7XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICBjb2xvcjogcGFsZXR0ZShjb2xvci1hbHBoYSxsaWdodCk7XG4gICAgfVxuXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IHRoaW4gZG90dGVkO1xuICAgICAgICBjb2xvcjogcGFsZXR0ZShjb2xvci1hbHBoYSxsaWdodCk7XG4gICAgfVxuXG4gICAgJjpob3ZlcixcbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIG91dGxpbmU6IDA7XG4gICAgfVxufVxuIiwiLy9cbi8vICBUb29sczogU3BhY2luZ1xuLy8gIC0tLVxuLy8gIE1peGlucyB0byBhZGQgcGFkZGluZyBhbmQgbWFyZ2luIGluIHJlbSB3aXRoICRweC1mYWxsYmFja1xuLy9cblxuLy8gSG9yaXpvbnRhbCBzcGFjaW5nXG5cbi8vIGhvcml6b250YWwgcGFkZGluZyBiYXNlZCBvbiB0aGUgYWxwaGEgZm9udCBzaXplIGluIHJlbVxuLy8gdXNlOiBAaW5jbHVkZSBwYWRkaW5nLWxyKCNsZWZ0LCAjcmlnaHQpO1xuXG5AbWl4aW4gcGFkZGluZy1scigkbGVmdDogJGNvbHVtbnMtZ3V0dGVyLCAkcmlnaHQ6ICRsZWZ0KSB7XG4gICAgcGFkZGluZy1sZWZ0OiAkbGVmdCAqIDFyZW07XG4gICAgcGFkZGluZy1yaWdodDogJHJpZ2h0ICogMXJlbTtcbn1cblxuQG1peGluIHBhZGRpbmctbGVmdCgkbGVmdDogJGNvbHVtbnMtZ3V0dGVyKSB7XG4gICAgcGFkZGluZy1sZWZ0OiAkbGVmdCAqIDFyZW07XG59XG5cbkBtaXhpbiBwYWRkaW5nLXJpZ2h0KCRyaWdodDogJGNvbHVtbnMtZ3V0dGVyKSB7XG4gICAgcGFkZGluZy1yaWdodDogJHJpZ2h0ICogMXJlbTtcbn1cblxuLy8gaG9yaXpvbnRhbCBtYXJnaW4gYmFzZWQgb24gdGhlIGFscGhhIGZvbnQgc2l6ZSBpbiByZW1cbi8vIHVzZTogQGluY2x1ZGUgbWFyZ2luLWxyKCNsZWZ0LCAjcmlnaHQpO1xuXG5AbWl4aW4gbWFyZ2luLWxyKCRsZWZ0OiAkY29sdW1ucy1ndXR0ZXIsICRyaWdodDogJGxlZnQpIHtcbiAgICBtYXJnaW4tbGVmdDogJGxlZnQgKiAxcmVtO1xuICAgIG1hcmdpbi1yaWdodDogJHJpZ2h0ICogMXJlbTtcbn1cblxuQG1peGluIG1hcmdpbi1sZWZ0KCRsZWZ0OiAkY29sdW1ucy1ndXR0ZXIpIHtcbiAgICBtYXJnaW4tbGVmdDogJGxlZnQgKiAxcmVtO1xufVxuXG5AbWl4aW4gbWFyZ2luLXJpZ2h0KCRyaWdodDogMSkge1xuICAgIG1hcmdpbi1yaWdodDogJHJpZ2h0ICogMXJlbTtcbn1cblxuLy8gVmVydGljYWwgc3BhY2luZ1xuXG4vLyB2ZXJ0aWNhbCBwYWRkaW5nIGJhc2VkIG9uIHRoZSBhbHBoYSBmb250IHNpemUgaW4gcmVtXG4vLyB1c2U6IEBpbmNsdWRlIHBhZGRpbmctdGIoI3RvcCwgI2JvdHRvbSk7XG5cbkBtaXhpbiBwYWRkaW5nLXRiKCR0b3A6ICRhbHBoYS1sZWFkaW5nLCAkYm90dG9tOiAwKSB7XG4gICAgcGFkZGluZy10b3A6ICR0b3AgKiAxcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAkYm90dG9tICogMXJlbTtcbn1cblxuQG1peGluIHBhZGRpbmctYm90dG9tKCRib3R0b206ICRhbHBoYS1sZWFkaW5nKSB7XG4gICAgcGFkZGluZy1ib3R0b206ICRib3R0b20gKiAxcmVtO1xufVxuXG5AbWl4aW4gcGFkZGluZy10b3AoJHRvcDogJGFscGhhLWxlYWRpbmcpIHtcbiAgICBwYWRkaW5nLXRvcDogJHRvcCAqIDFyZW07XG59XG5cbi8vIHZlcnRpY2FsIG1hcmdpbiBiYXNlZCBvbiB0aGUgYWxwaGEgZm9udCBzaXplIGluIHJlbVxuLy8gdXNlOiBAaW5jbHVkZSBtYXJnaW4tdGIoI3RvcCwgI2JvdHRvbSk7XG5cbkBtaXhpbiBtYXJnaW4tdGIoJHRvcDogJGFscGhhLWxlYWRpbmcsICRib3R0b206IDApIHtcbiAgICBtYXJnaW4tdG9wOiAkdG9wICogMXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAkYm90dG9tICogMXJlbTtcbn1cblxuQG1peGluIG1hcmdpbi1ib3R0b20oJGJvdHRvbTogJGFscGhhLWxlYWRpbmcpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAkYm90dG9tICogMXJlbTtcbn1cblxuQG1peGluIG1hcmdpbi10b3AoJHRvcDogMSkge1xuICAgIG1hcmdpbi10b3A6ICR0b3AgKiAxcmVtO1xufVxuIiwiLy9cbi8vICBTZXR0aW5nczogVHlwb2dyYXBoeVxuLy8gIC0tLVxuLy8gIFNldCB5b3VyIGJhc2VsaW5lLCBmb250IGZhbWlseSwgZm9udCBzaXplLCBldGMuXG4vL1xuXG4kYWxwaGEtZm9udC1mYW1pbHkgICAgICAgICAgOiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiRiZXRhLWZvbnQtZmFtaWx5ICAgICAgICAgICA6ICdSb2JvdG8nLCBzZXJpZjtcblxuJGFscGhhLWZvbnQtc2l6ZSAgICAgICAgICAgIDogJG1zMDtcblxuJGFscGhhLWZvbnQtd2VpZ2h0ICAgICAgICAgIDogNDAwO1xuJGJldGEtZm9udC13ZWlnaHQgICAgICAgICAgIDogNzAwO1xuXG4kYWxwaGEtbGluZS1oZWlnaHQgICAgICAgICAgOiAxLjU7XG5cbiRhbHBoYS1sZWFkaW5nICAgICAgICAgICAgICA6IDE7XG4kYmV0YS1sZWFkaW5nICAgICAgICAgICAgICAgOiAyO1xuIiwiLy9cbi8vICBUb29sczogVHlwb2dyYXBoeVxuLy8gIC0tLVxuLy8gIFR5cG9ncmFwaGljIG1peGluc1xuLy9cblxuLy8gYmFzZWxpbmUgZm9ybXVsYSBiYXNlZCBvbiB0aGUgJGFscGhhLWxpbmUtaGVpZ2h0IHZhcmlhYmxlXG4vLyB1c2U6IEBpbmNsdWRlIHRleHQtZGltZW5zaW9ucygjZm9udC1zaXplLCAjbGluZS1oZWlnaHQsICNtYXJnaW4tYm90dG9tLCAjcGFkZGluZy10b3ApXG5cbiRiYXNlbGluZS11bml0OiAkYWxwaGEtZm9udC1zaXplICogJGFscGhhLWxpbmUtaGVpZ2h0O1xuJGJhc2Vmb250cGVyY2VudDogJGFscGhhLWZvbnQtc2l6ZS8xNiAqIDEwMDtcbiRmczogMTtcbiRsaDogMTtcblxuQG1peGluIHRleHQtZGltZW5zaW9ucygkZnM6ICRhbHBoYS1mb250LXNpemUsICRsaDogJGFscGhhLWxpbmUtaGVpZ2h0LCAkbWI6IDAsICRwdDogMCwgJHBiOiAwLCAkbXQ6IDApIHtcbiAgICBmb250LXNpemU6ICN7JGZzIC8gJGFscGhhLWZvbnQtc2l6ZX1yZW07XG4gICAgbGluZS1oZWlnaHQ6ICN7KCRiYXNlbGluZS11bml0IC8gJGZzKSAqICRsaH1lbTtcblxuICAgIEBpZiAkbWIgPiAwIHtcbiAgICAgICAgQGluY2x1ZGUgbWFyZ2luLWJvdHRvbSgkbWIpO1xuICAgIH1cblxuICAgIEBpZiAkbXQgPiAwIHtcbiAgICAgICAgQGluY2x1ZGUgbWFyZ2luLXRvcCgkbXQpO1xuICAgIH1cblxuICAgIEBpZiAkcHQgPiAwIHtcbiAgICAgICAgQGluY2x1ZGUgcGFkZGluZy10b3AoJHB0KTtcbiAgICB9XG5cbiAgICBAaWYgJHBiID4gMCB7XG4gICAgICAgIEBpbmNsdWRlIHBhZGRpbmctYm90dG9tKCRwYik7XG4gICAgfVxuXG59XG5cbkBtaXhpbiBpbnB1dC1kaW1lbnNpb25zKCRmczogMSwgJGxoOiAxLCAkbWI6IDAsICRwdDogMCwgJHBiOiAwLCAkbXQ6IDApIHtcbiAgICBmb250LXNpemU6ICRmcy8kYWxwaGEtZm9udC1zaXplKjFyZW07XG5cbiAgICBAaWYgJG1iID4gMCB7XG4gICAgICAgIEBpbmNsdWRlIG1hcmdpbi1ib3R0b20oJG1iKTtcbiAgICB9XG5cbiAgICBAaWYgJG10ID4gMCB7XG4gICAgICAgIEBpbmNsdWRlIG1hcmdpbi10b3AoJG10KTtcbiAgICB9XG5cbiAgICBAaWYgJHB0ID4gMCB7XG4gICAgICAgIEBpbmNsdWRlIHBhZGRpbmctdG9wKCRwdCk7XG4gICAgfVxuXG4gICAgQGlmICRwYiA+IDAge1xuICAgICAgICBAaW5jbHVkZSBwYWRkaW5nLWJvdHRvbSgkcGIpO1xuICAgIH1cbn1cbiIsIi8vXG4vLyAgVXRpbGl0aWVzOiBBbmltYXRpb25zXG4vLyAgLS0tXG4vLyAgQW5pbWF0aW9ucyB1c2VkIHRocm91Z2hvdXQgdGhlIGludGVyZmFjZVxuLy9cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICAgIGZyb20ge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgICB0byB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxufVxuXG5Aa2V5ZnJhbWVzIGZhZGVVcCB7XG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1MHB4KTtcbiAgICB9XG5cbiAgICB0byB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB9XG59XG5cbkBrZXlmcmFtZXMgZmFkZVVwQmlnIHtcbiAgICBmcm9tIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICAgIH1cblxuICAgIHRvIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIH1cbn1cblxuQGtleWZyYW1lcyBmYWRlUmlnaHQge1xuICAgIGZyb20ge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIGluaGVyaXQsIGluaGVyaXQpO1xuICAgIH1cblxuICAgIHRvIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCBpbmhlcml0LCBpbmhlcml0KTtcbiAgICB9XG59XG4iLCIvKlxuICAgIFV0aWxpdGllczogVHlwb2dyYXBoeVxuICAgIC0tLVxuICAgIFNlbWFudGljIGhlbHBlciBjbGFzc2VzIGZvciB0eXBvZ3JhcGh5XG4qL1xuXG4udS10ZXh0LXVwcGVyY2FzZSB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLnUtdGV4dC1sb3dlcmNhc2Uge1xuICAgIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG59XG5cblxuLnUtdGV4dC10aGluIHtcbiAgICBmb250LXdlaWdodDogMTAwO1xufVxuLnUtdGV4dC1saWdodCB7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cbi51LXRleHQtbm9ybWFsIHtcbiAgICBmb250LXdlaWdodDogNDAwO1xufVxuLnUtdGV4dC1tZWRpdW0ge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4udS10ZXh0LWJvbGQge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4udS10ZXh0LXVsdHJhLWJvbGQge1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG5cblxuLnUtdGV4dC1sZWZ0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLnUtdGV4dC1jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi51LXRleHQtcmlnaHQge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuIiwiLypcbiAgICBVdGlsaXRpZXM6IFN0YXRlc1xuICAgIC0tLVxuICAgIENvbXBvbmVudCBzdGF0ZXNcbiovXG5cbi5pcy1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cbiIsIi8qXG4gICAgVXRpbGl0aWVzOiBMYXllcnNcbiAgICAtLS1cbiovXG5cbi51LXotYWxwaGEgICB7IHotaW5kZXg6IDE7IH1cbi51LXotYmV0YSAgICB7IHotaW5kZXg6IDI7IH1cbi51LXotZ2FtbWEgICB7IHotaW5kZXg6IDM7IH1cbi51LXotZGVsdGEgICB7IHotaW5kZXg6IDQ7IH1cbi51LXotZXBzaWxvbiB7IHotaW5kZXg6IDU7IH1cbiIsIi8vXG4vLyAgVXRpbGl0aWVzOiBQb3NpdGlvblxuLy8gIC0tLVxuLy9cblxuLnUtcmVsYXRpdmUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn07XG4iLCIvKlxuICAgIFV0aWxpdGllczogV2lkdGhzXG4gICAgLS0tXG4gICAgV2lkdGggdXRpbGl0eSBjbGFzc2VzXG4qL1xuXG4udS13aWR0aC0xLTYge1xuICAgIHdpZHRoOiBzcGFuKDEgb2YgNik7XG4gICAgcGFkZGluZy1sZWZ0OiBndXR0ZXIoNik7XG4gICAgcGFkZGluZy1yaWdodDogZ3V0dGVyKDYpO1xufVxuLnUtd2lkdGgtMi02IHtcbiAgICB3aWR0aDogc3BhbigyIG9mIDYpO1xuICAgIHBhZGRpbmctbGVmdDogZ3V0dGVyKDYpO1xuICAgIHBhZGRpbmctcmlnaHQ6IGd1dHRlcig2KTtcbn1cbi51LXdpZHRoLTMtNiB7XG4gICAgd2lkdGg6IHNwYW4oMyBvZiA2KTtcbiAgICBwYWRkaW5nLWxlZnQ6IGd1dHRlcig2KTtcbiAgICBwYWRkaW5nLXJpZ2h0OiBndXR0ZXIoNik7XG59XG4udS13aWR0aC00LTYge1xuICAgIHdpZHRoOiBzcGFuKDQgb2YgNik7XG4gICAgcGFkZGluZy1sZWZ0OiBndXR0ZXIoNik7XG4gICAgcGFkZGluZy1yaWdodDogZ3V0dGVyKDYpO1xufVxuLnUtd2lkdGgtNS02IHtcbiAgICB3aWR0aDogc3Bhbig1IG9mIDYpO1xuICAgIHBhZGRpbmctbGVmdDogZ3V0dGVyKDYpO1xuICAgIHBhZGRpbmctcmlnaHQ6IGd1dHRlcig2KTtcbn1cbi51LXdpZHRoLTYtNiB7XG4gICAgd2lkdGg6IHNwYW4oNiBvZiA2KTtcbiAgICBwYWRkaW5nLWxlZnQ6IGd1dHRlcig2KTtcbiAgICBwYWRkaW5nLXJpZ2h0OiBndXR0ZXIoNik7XG59XG4iLCIvLyBHdXR0ZXIgU3ludGF4XG4vLyA9PT09PT09PT09PT09XG5cblxuLy8gR3V0dGVyc1xuLy8gLS0tLS0tLVxuLy8gU2V0IGd1dHRlcnMgb24gYW4gZWxlbWVudC5cbi8vIC0gWyRzcGFuXSAgIDogPHNldHRpbmdzPlxuQG1peGluIGd1dHRlcnMoXG4gICRzcGFuOiAkc3VzeVxuKSB7XG4gICRpbnNwZWN0ICA6ICRzcGFuO1xuICAkc3BhbiAgICAgOiBwYXJzZS1ndXR0ZXJzKCRzcGFuKTtcbiAgJF9ndXR0ZXJzIDogZ2V0LWd1dHRlcnMoJHNwYW4pO1xuXG4gICRfb3V0cHV0OiAoXG4gICAgYmVmb3JlOiBtYXAtZ2V0KCRfZ3V0dGVycywgYmVmb3JlKSxcbiAgICBhZnRlcjogbWFwLWdldCgkX2d1dHRlcnMsIGFmdGVyKSxcbiAgICBmbG93OiBzdXN5LWdldChmbG93LCAkc3BhbiksXG4gICk7XG5cbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGd1dHRlcnMsICRpbnNwZWN0KTtcblxuICBAaWYgaXMtaW5zaWRlKCRzcGFuKSB7XG4gICAgQGluY2x1ZGUgcGFkZGluZy1vdXRwdXQoJF9vdXRwdXQuLi4pO1xuICB9IEBlbHNlIHtcbiAgICBAaW5jbHVkZSBtYXJnaW4tb3V0cHV0KCRfb3V0cHV0Li4uKTtcbiAgfVxufVxuXG5AbWl4aW4gZ3V0dGVyKFxuICAkc3BhbjogJHN1c3lcbikge1xuICBAaW5jbHVkZSBndXR0ZXJzKCRzcGFuKTtcbn1cblxuXG4vLyBHdXR0ZXJcbi8vIC0tLS0tLVxuLy8gUmV0dXJuIHRoZSB3aWR0aCBvZiBhIGd1dHRlci5cbi8vIC0gWyRzcGFuXSAgIDogPHNldHRpbmdzPlxuQGZ1bmN0aW9uIGd1dHRlcihcbiAgJHNwYW46ICRzdXN5XG4pIHtcbiAgJHNwYW46IHBhcnNlLWd1dHRlcnMoJHNwYW4pO1xuXG4gICRfZ3V0dGVyczogZ2V0LWd1dHRlcnMoJHNwYW4pO1xuICAkX2d1dHRlcnM6IG1hcC1nZXQoJF9ndXR0ZXJzLCBiZWZvcmUpIG9yIG1hcC1nZXQoJF9ndXR0ZXJzLCBhZnRlcik7XG5cbiAgQHJldHVybiAkX2d1dHRlcnM7XG59XG5cbkBmdW5jdGlvbiBndXR0ZXJzKFxuICAkc3BhbjogJHN1c3lcbikge1xuICBAcmV0dXJuIGd1dHRlcigkc3Bhbik7XG59XG5cblxuLy8gR2V0IEd1dHRlciBXaWR0aFxuLy8gLS0tLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJuIGd1dHRlciB3aWR0aC5cbi8vIC0gWyRjb250ZXh0XTogPGNvbnRleHQ+XG5AZnVuY3Rpb24gZ2V0LWd1dHRlci13aWR0aChcbiAgJGNvbnRleHQ6ICRzdXN5XG4pIHtcbiAgJGNvbnRleHQgIDogcGFyc2UtZ3V0dGVycygkY29udGV4dCk7XG5cbiAgJF9ndXR0ZXJzIDogc3VzeS1nZXQoZ3V0dGVycywgJGNvbnRleHQpO1xuICAkX2d1dHRlciAgOiBzdXN5LWdldChndXR0ZXItb3ZlcnJpZGUsICRjb250ZXh0KTtcblxuICBAaWYgJF9ndXR0ZXJzIGFuZCAoJF9ndXR0ZXJzID4gMCkgYW5kIG5vdCgkX2d1dHRlcikge1xuICAgICRfY29sdW1uLXdpZHRoOiBzdXN5LWdldChjb2x1bW4td2lkdGgsICRjb250ZXh0KTtcbiAgICAkX21hdGg6IGd1dHRlci1tYXRoKCRjb250ZXh0KTtcbiAgICBAaWYgJF9tYXRoID09IHN0YXRpYyB7XG4gICAgICAkX2d1dHRlcjogJF9ndXR0ZXJzICogdmFsaWQtY29sdW1uLW1hdGgoJF9tYXRoLCAkX2NvbHVtbi13aWR0aCk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkX2NvbHVtbnMgOiBzdXN5LWdldChjb2x1bW5zLCAkY29udGV4dCk7XG4gICAgICAkX3NwcmVhZCAgOiBpZihpcy1zcGxpdCgkY29udGV4dCksIHdpZGUsIHN1c3ktZ2V0KHNwcmVhZCwgJGNvbnRleHQpKTtcbiAgICAgICRfZ3V0dGVyICA6IHBlcmNlbnRhZ2UoJF9ndXR0ZXJzIC8gc3VzeS1zdW0oJF9jb2x1bW5zLCAkX2d1dHRlcnMsICRfc3ByZWFkKSk7XG4gICAgfVxuICB9XG5cbiAgJF9ndXR0ZXI6IGlmKCRfZ3V0dGVyID09ICduby1ndXR0ZXJzJyBvciAkX2d1dHRlciA9PSAnbm8tZ3V0dGVyJywgbnVsbCwgJF9ndXR0ZXIpO1xuXG4gIEByZXR1cm4gJF9ndXR0ZXI7XG59XG5cblxuLy8gR2V0IEd1dHRlcnNcbi8vIC0tLS0tLS0tLS0tXG4vLyBSZXR1cm4gYmVmb3JlIGFuZCBhZnRlciBndXR0ZXIgdmFsdWVzLlxuLy8gLSBbJGNvbnRleHRdOiA8Y29udGV4dD5cbkBmdW5jdGlvbiBnZXQtZ3V0dGVycyhcbiAgJGNvbnRleHQ6ICRzdXN5XG4pIHtcbiAgJGNvbnRleHQgICAgICAgICAgICA6IHBhcnNlLWd1dHRlcnMoJGNvbnRleHQpO1xuXG4gICRfZ3V0dGVyLXBvc2l0aW9uICAgOiBzdXN5LWdldChndXR0ZXItcG9zaXRpb24sICRjb250ZXh0KTtcbiAgJF9ndXR0ZXIgICAgICAgICAgICA6IGdldC1ndXR0ZXItd2lkdGgoJGNvbnRleHQpO1xuXG4gICRfcmV0dXJuICAgICAgICAgICAgOiAoYmVmb3JlOiBudWxsLCBhZnRlcjogbnVsbCk7XG5cbiAgQGlmIGlzLXNwbGl0KCRjb250ZXh0KSBhbmQgJF9ndXR0ZXIge1xuICAgICRfZ3V0dGVyOiAkX2d1dHRlciAvIDI7XG4gICAgJF9yZXR1cm46IG1hcC1tZXJnZSgkX3JldHVybiwgKGJlZm9yZTogJF9ndXR0ZXIsIGFmdGVyOiAkX2d1dHRlcikpO1xuICB9IEBlbHNlIHtcbiAgICAkX3JldHVybjogbWFwLW1lcmdlKCRfcmV0dXJuLCAoJF9ndXR0ZXItcG9zaXRpb246ICRfZ3V0dGVyKSk7XG4gIH1cblxuICBAcmV0dXJuICRfcmV0dXJuO1xufVxuXG5cbi8vIElzIEluc2lkZVxuLy8gLS0tLS0tLS0tXG4vLyBSZXR1cm5zIHRydWUgaWYgZ3V0dGVycyBhcmUgaW5zaWRlLlxuLy8gJGNvbnRleHQ6IDxjb250ZXh0PlxuQGZ1bmN0aW9uIGlzLWluc2lkZShcbiAgJGNvbnRleHRcbikge1xuICAkX2luc2lkZTogaW5zaWRlIGluc2lkZS1zdGF0aWM7XG4gICRfZ3V0dGVyLXBvc2l0aW9uOiBzdXN5LWdldChndXR0ZXItcG9zaXRpb24sICRjb250ZXh0KTtcblxuICBAcmV0dXJuIGlmKGluZGV4KCRfaW5zaWRlLCAkX2d1dHRlci1wb3NpdGlvbiksIHRydWUsIGZhbHNlKTtcbn1cblxuXG4vLyBJcyBTcGxpdFxuLy8gLS0tLS0tLS1cbi8vIFJldHVybnMgdHJ1ZSBpZiBndXR0ZXJzIGFyZSBzcGxpdC5cbi8vICRjb250ZXh0OiA8Y29udGV4dD5cbkBmdW5jdGlvbiBpcy1zcGxpdChcbiAgJGNvbnRleHRcbikge1xuICAkX3NwbGl0OiBzcGxpdCBpbnNpZGUgaW5zaWRlLXN0YXRpYztcbiAgJF9ndXR0ZXItcG9zaXRpb246IHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJGNvbnRleHQpO1xuXG4gIEByZXR1cm4gaWYoaW5kZXgoJF9zcGxpdCwgJF9ndXR0ZXItcG9zaXRpb24pLCB0cnVlLCBmYWxzZSk7XG59XG5cblxuLy8gR3V0dGVyIE1hdGhcbi8vIC0tLS0tLS0tLS0tXG4vLyBSZXR1cm4gdGhlIG1hdGggdG8gdXNlIGZvciBndXR0ZXIgY2FsY3VsYXRpb25zXG4vLyAkY29udGV4dDogPGNvbnRleHQ+XG5AZnVuY3Rpb24gZ3V0dGVyLW1hdGgoXG4gICRjb250ZXh0OiAkc3VzeVxuKSB7XG4gICRfcmV0dXJuICA6IHN1c3ktZ2V0KG1hdGgsICRjb250ZXh0KTtcbiAgJF9yZXR1cm4gIDogaWYoc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCkgPT0gaW5zaWRlLXN0YXRpYywgc3RhdGljLCAkX3JldHVybik7XG5cbiAgQHJldHVybiAkX3JldHVybjtcbn1cbiIsIi8vXG4vLyAgVXRpbGl0aWVzOiBGbG9hdFxuLy8gIC0tLVxuLy9cblxuLnUtb3ZlcmZsb3dIaWRkZW4ge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jbHIge1xuICAgIEBpbmNsdWRlIGNsZWFyZml4O1xufVxuLnUtY2xlYXIge1xuICAgIEBpbmNsdWRlIGNsZWFyZml4O1xufVxuXG4uZmwge1xuICAgIGZsb2F0OiBsZWZ0O1xufVxuLnUtZmxvYXRMZWZ0IHtcbiAgICBmbG9hdDogbGVmdDtcbn1cbi5mciB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuLnUtZmxvYXRSaWdodCB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuLmZuIHtcbiAgICBmbG9hdDogbm9uZTtcbn1cbiIsIi8vXG4vLyAgVG9vbHM6IE1peGluc1xuLy8gIC0tLVxuLy8gIEdsb2JhbCBtaXhpbnNcbi8vXG5cbi8vIENhbGN1bGF0ZSB0ZXh0LWNvbG9yIGJhc2VkIG9uIGJhY2tncm91bmQtY29sb3JcblxuQG1peGluIHRleHQtY29sb3IoJGMxKSB7XG4gICAgLy8gQ2FsY3VsYXRpb25zIGJhc2VkIG9uIGh0dHBzOi8vdmltZW8uY29tLzYwMjI0NTg0XG4gICAgQGlmICguMjEyNipyZWQoJGMxKSArIC43MTUyKmdyZWVuKCRjMSkgKyAuMDcyMipibHVlKCRjMSkpLzI1NSA8PSAuNSB7XG4gICAgICAgIGNvbG9yOiBtaXgoI0ZGRiwgJGMxLCA5NSUpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgICBjb2xvcjogbWl4KCMwMDAsICRjMSwgNzAlKTtcbiAgICB9XG59XG5cbi8vIFZlcnRpY2FsbHkgY2VudGVyIGFueSBvYmplY3Qgd2l0aGluIGl0cyBjb250YWluZXIuIFdvcmtzIGluIElFOSBhbmQgdXAuXG4vLyBAaW5jbHVkZSB2ZXJ0aWNhbC1jZW50ZXI7XG5cbkBtaXhpbiB2ZXJ0aWNhbC1jZW50ZXIoJHBvc2l0aW9uOiByZWxhdGl2ZSkge1xuICAgIHBvc2l0aW9uOiAkcG9zaXRpb247XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4vL1xuLy8gTWVkaWEgUXVlcnkgbWl4aW4gKG9sZCB2ZXJzaW9uKVxuLy8gQGluY2x1ZGUgbXEoI3BvaW50LCAjcXVlcnkxLCAjcXVlcnkyKTtcbi8vXG5AbWl4aW4gbXEoJHBvaW50LCAkcXVlcnkxOiBtaW4sICRxdWVyeTI6IHdpZHRoKSB7XG4gICAgQG1lZGlhICgjeyRxdWVyeTF9LSN7JHF1ZXJ5Mn06ICRwb2ludCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbi8vIENsZWFyZml4LlxuLy8gQG1peGluIGNsZWFyZml4XG5cbkBtaXhpbiBjbGVhcmZpeCB7XG4gICAgKnpvb206IDE7XG5cbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgIH1cblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG59XG5cbi8vIFByZXZlbnQgTG9uZyBVUkzigJlzIEZyb20gQnJlYWtpbmcgT3V0IG9mIENvbnRhaW5lci5cbi8vIGh0dHA6Ly9jc3MtdHJpY2tzLmNvbS9zbmlwcGV0cy9jc3MvcHJldmVudC1sb25nLXVybHMtZnJvbS1icmVha2luZy1vdXQtb2YtY29udGFpbmVyXG5cbkBtaXhpbiB3b3JkLWJyZWFrIHtcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG4gICAgaHlwaGVuczogYXV0bztcbn1cblxuQG1peGluIGhpZGUtdGV4dCB7XG4gICAgZm9udDogMC8wIGE7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHRleHQtc2hhZG93OiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMDtcbn1cblxuLy8gVHJhbnNpdGlvblxuLy8gQG1peGluIHRyYW5zaXRpb24odHJhbnNpdGlvbilcbkBtaXhpbiB0cmFuc2l0aW9uKCR0cmFuc2l0aW9uLi4uKSB7XG4gICAgLW1vei10cmFuc2l0aW9uOiAgICAkdHJhbnNpdGlvbjtcbiAgICAtby10cmFuc2l0aW9uOiAgICAgICR0cmFuc2l0aW9uO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG4gICAgdHJhbnNpdGlvbjogICAgICAgICAkdHJhbnNpdGlvbjtcbn1cblxuLy8gU2l6ZVxuLy8gQG1peGluIHNpemUoc2l6ZSlcbkBtaXhpbiBzaXplKCRzKSB7XG4gICAgd2lkdGg6ICRzO1xuICAgIGhlaWdodDogJHM7XG59XG5cblxuLy8gTWF0ZXJpYWwgRGVzaWduIFNoYWRvdyBoZWxwZXJcbkBtaXhpbiBzaGFkb3coJGxldmVsOiAxKSB7XG4gIEBpZiAkbGV2ZWwgPT0gMSB7Ym94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwwLDAsMC4xMiksIDAgMXB4IDJweCByZ2JhKDAsMCwwLDAuMjQpO31cbiAgQGVsc2UgaWYgJGxldmVsID09IDIge2JveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsMCwwLDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLDAsMCwwLjIzKTt9XG4gIEBlbHNlIGlmICRsZXZlbCA9PSAzIHtib3gtc2hhZG93OiAwIDEwcHggMjBweCByZ2JhKDAsMCwwLDAuMTkpLCAwIDZweCA2cHggcmdiYSgwLDAsMCwwLjIzKTt9XG4gIEBlbHNlIGlmICRsZXZlbCA9PSA0IHtib3gtc2hhZG93OiAwIDE0cHggMjhweCByZ2JhKDAsMCwwLDAuMjUpLCAwIDEwcHggMTBweCByZ2JhKDAsMCwwLDAuMjIpO31cbiAgQGVsc2UgaWYgJGxldmVsID09IDUge2JveC1zaGFkb3c6IDAgMTlweCAzOHB4IHJnYmEoMCwwLDAsMC4zMCksIDAgMTVweCAxMnB4IHJnYmEoMCwwLDAsMC4yMik7fVxufVxuIiwiLypcbiAgICBVdGlsaXRpZXM6IFNoYW1lXG4gICAgLS0tXG4gICAgSGFja3MgYW5kIHF1aWNrIGZpeGVzXG4qL1xuXG4udmlld0NvbmRpdGlvbnMsXG4udmlld09wdGlvbnMge1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
